name: Build and Test

on:
  workflow_dispatch:
    inputs:
      build_linux:
        description: "Build Linux artifacts"
        required: false
        default: "false"
        type: boolean
      build_windows:
        description: "Build Windows artifacts"
        required: false
        default: "false"
        type: boolean

jobs:
  build-linux:
    if: ${{ github.event.inputs.build_linux == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Get version
      id: version
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "✓ Version: $VERSION"
    
    - name: Install dependencies
      run: |
        echo "Installing dependencies..."
        npm install
        echo "✓ Dependencies installed"
    
    - name: Webpack build
      run: |
        echo "Building with webpack..."
        npx webpack --mode production
        echo "✓ Webpack build completed"
    
    - name: Type check
      run: |
        echo "Running TypeScript type check..."
        npm run type-check
        echo "✓ Type check passed"
    
    - name: Verify build artifacts
      run: |
        test -d dist || exit 1
        test -f dist/bundle.js || exit 1
        test -f dist/index.html || exit 1
        echo "✓ Build artifacts created successfully"
    
    - name: Verify Python launcher syntax
      run: python -m py_compile launcher.py
    
    - name: Build Electron app (Linux)
      run: npx electron-builder --linux --publish never
      env:
        ELECTRON_CACHE: ${{ github.workspace }}/.cache/electron
        ELECTRON_BUILDER_CACHE: ${{ github.workspace }}/.cache/electron-builder
    
    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: DBO-Universal-Translation-Tool-linux-v${{ steps.version.outputs.version }}
        path: release/**/*
        retention-days: 7
  
  build-windows:
    if: ${{ github.event.inputs.build_windows == 'true' }}
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Get version
      id: version
      run: |
        $VERSION = (node -p "require('./package.json').version")
        echo "version=$VERSION" >> $env:GITHUB_OUTPUT
        echo "✓ Version: $VERSION"
    
    - name: Install dependencies
      run: |
        echo "Installing dependencies..."
        npm install
        echo "✓ Dependencies installed"
    
    - name: Webpack build
      run: |
        echo "Building with webpack..."
        npx webpack --mode production
        echo "✓ Webpack build completed"
    
    - name: Type check
      run: |
        echo "Running TypeScript type check..."
        npm run type-check
        echo "✓ Type check passed"
    
    - name: Verify build artifacts
      run: |
        if (-not (Test-Path "dist")) { exit 1 }
        if (-not (Test-Path "dist/bundle.js")) { exit 1 }
        if (-not (Test-Path "dist/index.html")) { exit 1 }
        echo "✓ Build artifacts created successfully"
    
    - name: Verify Python launcher syntax
      run: python -m py_compile launcher.py
    
    - name: Build Electron app (Windows)
      run: npx electron-builder --win --publish never
      env:
        ELECTRON_CACHE: ${{ github.workspace }}/.cache/electron
        ELECTRON_BUILDER_CACHE: ${{ github.workspace }}/.cache/electron-builder
        CSC_IDENTITY_AUTO_DISCOVERY: false
    
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: DBO-Universal-Translation-Tool-windows-v${{ steps.version.outputs.version }}
        path: release/**/*
        retention-days: 7
